name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ‚úÖ Just import check instead of running Flask server
      - name: Run basic build (import check)
        run: python -c "import app; print('App imported successfully ‚úÖ')"

      - name: Run unit tests
        run: |
          pip install pytest
          pytest -v

      - name: Run integration tests
        run: echo "Simulating integration tests..."
      
      - name: Use secret
        run: echo "Secret is ${{ secrets.MY_SECRET }}"

  docker-build:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

       # ‚úÖ New Step: Lint Dockerfile with Hadolint
      - name: Lint Dockerfile with Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      - name: Build and push Docker image
        run: |
          REPO_LC=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE=ghcr.io/$REPO_LC/hello-devsecops
          docker build -t $IMAGE:${{ github.sha }} -t $IMAGE:latest .
          docker push $IMAGE:${{ github.sha }}
          docker push $IMAGE:latest

      # ‚úÖ Install Trivy
      - name: Install Trivy
        uses: aquasecurity/setup-trivy@v0.2.0

      # üîç Scan image with Trivy
      - name: Scan image with Trivy
        run: |
          REPO_LC=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE=ghcr.io/$REPO_LC/hello-devsecops:${{ github.sha }}
          trivy image --severity CRITICAL,HIGH --vuln-type os,library $IMAGE